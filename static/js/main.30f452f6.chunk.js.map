{"version":3,"sources":["components/SelectYear.jsx","components/SetRange.jsx","MapChart.js","App.js","index.js"],"names":["SelectYear","setYear","Form","Group","Label","Control","as","custom","onChange","e","target","value","SetRange","low","high","setLow","setHigh","type","defaultValue","MapChart","setTooltipContent","useState","alabamaData","setAlabamaData","iowaData","setIowaData","year","useEffect","csv","then","counties","colorScale","scaleLinear","domain","range","coordinates","zoom","position","setPosition","projection","center","onMoveEnd","geography","geographies","map","geo","cur","find","s","parseInt","fips","id","fill","X","onMouseEnter","properties","name","onMouseLeave","style","hover","outline","pressed","rsmKey","className","onClick","pos","xmlns","width","height","viewBox","stroke","strokeWidth","x1","y1","x2","y2","App","content","setContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30f452f6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst SelectYear = ({ setYear }) => {\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Label>Custom select</Form.Label>\n        <Form.Control\n          as=\"select\"\n          custom\n          onChange={(e) => {\n            setYear(e.target.value);\n          }}\n        >\n          <option>1948 - 1952</option>\n          <option>1952 - 1956</option>\n          <option>1956 - 1960</option>\n          <option>1960 - 1964</option>\n          <option>1964 - 1972</option>\n          <option>1972 - 1976</option>\n          <option>1976 - 1980</option>\n          <option>1980 - 1984</option>\n          <option>1984 - 1988</option>\n          <option>1988 - 1992</option>\n          <option>1992 - 1996</option>\n          <option>1996 - 2000</option>\n          <option>2000 - 2004</option>\n          <option>2004 - 2008</option>\n          <option>2008 - 2012</option>\n          <option>2012 - 2016</option>\n          <option>2016 - 2020</option>\n        </Form.Control>\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default SelectYear;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst SetRange = ({ low, high, setLow, setHigh }) => {\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Label>Low</Form.Label>\n        <Form.Control\n          type=\"number\"\n          defaultValue={low}\n          onChange={(e) => setLow(e.target.value)}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Label>High</Form.Label>\n        <Form.Control\n          type=\"number\"\n          defaultValue={high}\n          onChange={(e) => setHigh(e.target.value)}\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default SetRange;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n} from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\nimport { csv } from \"d3-fetch\";\n\nimport SelectYear from \"./components/SelectYear\";\nimport SetRange from \"./components/SetRange\";\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\n// const geoUrl =\n// \"https://github.com/deldersveld/topojson/blob/master/countries/us-states/AL-01-alabama-counties.json\";\n// \"https://raw.githubusercontent.com/kthotav/TopoJSON-Maps/master/usa/usa-states/alabama/al-counties.json\";\n\nconst MapChart = ({ setTooltipContent }) => {\n  const [alabamaData, setAlabamaData] = useState([]);\n  const [iowaData, setIowaData] = useState([]);\n  const [year, setYear] = useState(\"1948 - 1952\");\n  const [low, setLow] = useState(-100);\n  const [high, setHigh] = useState(100);\n\n  useEffect(() => {\n    setAlabamaData([]);\n    setIowaData([]);\n\n    csv(`Alabama/President/${year}.csv`).then((counties) => {\n      setAlabamaData(counties);\n    });\n    csv(`Iowa/President/${year}.csv`).then((counties) => {\n      setIowaData(counties);\n    });\n  }, [year]);\n\n  const colorScale = scaleLinear()\n    .domain([low, 0, high])\n    .range([\"red\", \"white\", \"blue\"]);\n\n  const [position, setPosition] = useState({ coordinates: [0, 0], zoom: 1 });\n\n  function handleZoomIn() {\n    if (position.zoom >= 4) return;\n    setPosition((pos) => ({ ...pos, zoom: pos.zoom * 2 }));\n  }\n\n  function handleZoomOut() {\n    if (position.zoom <= 1) return;\n    setPosition((pos) => ({ ...pos, zoom: pos.zoom / 2 }));\n  }\n\n  function handleMoveEnd(position) {\n    setPosition(position);\n  }\n\n  return (\n    <>\n      <SelectYear setYear={setYear} />\n      <SetRange low={low} high={high} setLow={setLow} setHigh={setHigh} />\n\n      <div>{year}</div>\n\n      <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\n        <ZoomableGroup\n          zoom={position.zoom}\n          center={position.coordinates}\n          onMoveEnd={handleMoveEnd}\n        >\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map((geo) => {\n                const cur =\n                  alabamaData.find(\n                    (s) => parseInt(s.fips) === parseInt(geo.id)\n                  ) ||\n                  iowaData.find((s) => parseInt(s.fips) === parseInt(geo.id));\n                //  const max = cur.find((s) => max > s.unemployment_rate);\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    fill={colorScale(cur ? cur.X : \"#0000FF\")}\n                    onMouseEnter={() => {\n                      setTooltipContent(\"\");\n                      setTooltipContent(\n                        `${geo.properties.name} : ${cur && cur.X}`\n                      );\n                    }}\n                    onMouseLeave={() => {\n                      setTooltipContent(\"\");\n                    }}\n                    style={{\n                      // default: {\n                      //   fill: \"#D6D6DA\",\n                      //   outline: \"none\"\n                      // },\n                      hover: {\n                        fill: \"#F53\",\n                        outline: \"none\",\n                      },\n                      pressed: {\n                        fill: \"#E42\",\n                        outline: \"none\",\n                      },\n                    }}\n                  />\n                );\n              })\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n      <div className=\"controls\">\n        <button onClick={handleZoomIn}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            strokeWidth=\"3\"\n          >\n            <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\n            <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n          </svg>\n        </button>\n        <button onClick={handleZoomOut}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            strokeWidth=\"3\"\n          >\n            <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n          </svg>\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default MapChart;\n","import React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n// import Tooltip from \"rc-tooltip\";\nimport MapChart from \"./MapChart\";\n// import \"rc-tooltip/assets/bootstrap_white.css\";\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  return (\n    <div>\n      <MapChart setTooltipContent={setContent} />\n      <ReactTooltip>{content}</ReactTooltip>\n\n      {/* <Tooltip\n        placement=\"left\"\n        overlay={content}\n        // arrowContent={<div className=\"rc-tooltip-arrow-inner\"></div>}\n      >\n        {content}\n      </Tooltip> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}