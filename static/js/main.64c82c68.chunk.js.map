{"version":3,"sources":["components/SelectYear.jsx","components/SetRange.jsx","components/MapArea.jsx","MapChart.js","App.js","index.js"],"names":["SelectYear","year","setYear","Form","Group","Control","type","default","onChange","e","target","value","SetRange","low","high","setLow","setHigh","className","min","max","Button","onClick","MapArea","setTooltipContent","position","handleMoveEnd","stateData","colorScale","scaleLinear","domain","range","alabamaData","iowaData","projection","zoom","center","coordinates","onMoveEnd","geography","geographies","map","geo","cur","find","s","parseInt","fips","id","fill","data","onMouseEnter","properties","name","getStateFromId","onMouseLeave","style","hover","outline","pressed","rsmKey","MapChart","useState","setAlabamaData","setIowaData","useEffect","csv","then","counties","setPosition","Row","Col","md","outlineColor","backgroundColor","textAlign","pos","xmlns","width","height","viewBox","stroke","strokeWidth","x1","y1","x2","y2","App","content","setContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64c82c68.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst SelectYear = ({ year, setYear }) => {\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Control\n          type=\"number\"\n          default={year}\n          onChange={(e) => {\n            setYear(e.target.value);\n          }}\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default SelectYear;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Slider from \"react-rangeslider\";\n\nimport \"react-rangeslider/lib/index.css\";\n\nconst SetRange = ({ low, high, setLow, setHigh }) => {\n  return (\n    <>\n      <div className=\"red\">\n        <Slider min={0} max={200} value={-low} onChange={(e) => setLow(-e)} />\n      </div>\n      <div className=\"blue\">\n        <Slider min={0} max={200} value={high} onChange={(e) => setHigh(e)} />\n      </div>\n      <Button\n        onClick={() => {\n          setHigh(100);\n          setLow(-100);\n        }}\n      >\n        Reset\n      </Button>\n    </>\n  );\n};\n\nexport default SetRange;\n","import React from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n} from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\n\nconst getStateFromId = (fips) => {\n  if (fips[0] === \"0\") {\n    if (fips[1] === \"1\") {\n      return \"Alabama\";\n    } else if (fips[1] === \"2\") {\n      return \"Alaska\";\n    } else if (fips[1] === \"5\") {\n      return \"Arkansas\";\n    }\n  } else if (fips[0] === \"1\") {\n    if (fips[1] === \"9\") {\n      return \"Iowa\";\n    } else if (fips[1] === \"3\") {\n      return \"Georgia\";\n    }\n  } else if (fips[0] === \"2\") {\n    if (fips[1] === \"2\") {\n      return \"Louisiana\";\n    } else if (fips[1] === \"8\") {\n      return \"Mississippi\";\n    }\n  }\n  return `${fips[0]}${fips[1]}`;\n};\n\nconst MapArea = ({\n  setTooltipContent,\n  low,\n  high,\n  position,\n  handleMoveEnd,\n  stateData,\n}) => {\n  const colorScale = scaleLinear()\n    .domain([low, 0, high])\n    .range([\"red\", \"white\", \"blue\"]);\n\n  const [alabamaData, iowaData] = stateData;\n\n  return (\n    <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\n      <ZoomableGroup\n        zoom={position.zoom}\n        center={position.coordinates}\n        onMoveEnd={handleMoveEnd}\n      >\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              const cur =\n                alabamaData.find(\n                  (s) => parseInt(s.fips) === parseInt(geo.id)\n                ) ||\n                iowaData.find((s) => parseInt(s.fips) === parseInt(geo.id));\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={colorScale(cur ? cur.data : \"#0000FF\")}\n                  onMouseEnter={() => {\n                    setTooltipContent(\"\");\n                    setTooltipContent(\n                      `${geo.properties.name}, ${getStateFromId(geo.id)} : ${\n                        cur && cur.data\n                      }`\n                    );\n                    // console.log(geo);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  style={{\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\",\n                    },\n                    pressed: {\n                      fill: \"#E42\",\n                      outline: \"none\",\n                    },\n                  }}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ZoomableGroup>\n    </ComposableMap>\n  );\n};\n\nexport default MapArea;\n","import React, { useState, useEffect } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport SelectYear from \"./components/SelectYear\";\nimport SetRange from \"./components/SetRange\";\nimport MapArea from \"./components/MapArea\";\n\nconst MapChart = ({ setTooltipContent }) => {\n  const [alabamaData, setAlabamaData] = useState([]);\n  const [iowaData, setIowaData] = useState([]);\n  const [year, setYear] = useState(\"1948\");\n  const [low, setLow] = useState(-100);\n  const [high, setHigh] = useState(100);\n\n  useEffect(() => {\n    setAlabamaData([]);\n    setIowaData([]);\n\n    csv(`noshift/Alabama/President/${year}.csv`).then((counties) => {\n      setAlabamaData(counties);\n    });\n    // csv(`Iowa/President/${year}.csv`).then((counties) => {\n    //   setIowaData(counties);\n    // });\n  }, [year]);\n\n  const [position, setPosition] = useState({ coordinates: [0, 0], zoom: 1 });\n\n  function handleZoomIn() {\n    if (position.zoom >= 4) return;\n    setPosition((pos) => ({ ...pos, zoom: pos.zoom * 2 }));\n  }\n\n  function handleZoomOut() {\n    if (position.zoom <= 1) return;\n    setPosition((pos) => ({ ...pos, zoom: pos.zoom / 2 }));\n  }\n\n  function handleMoveEnd(position) {\n    setPosition(position);\n  }\n\n  const stateData = [alabamaData, iowaData];\n\n  return (\n    <>\n      <Row className=\"layoutRow\">\n        <Col\n          md={10}\n          style={{ outlineColor: \"red\", outline: \"1px\" }}\n          className=\"layoutColumn\"\n        >\n          <MapArea\n            setTooltipContent={setTooltipContent}\n            low={low}\n            high={high}\n            position={position}\n            handleMoveEnd={handleMoveEnd}\n            stateData={stateData}\n          />\n        </Col>\n        <Col\n          md={2}\n          style={{ backgroundColor: \"lightgrey\" }}\n          className=\"layoutColumn\"\n        >\n          <h2 style={{ textAlign: \"center\" }}>{year}</h2>\n\n          <SelectYear year={year} setYear={setYear} />\n          <SetRange low={low} high={high} setLow={setLow} setHigh={setHigh} />\n\n          <button onClick={handleZoomIn}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              strokeWidth=\"3\"\n            >\n              <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n            </svg>\n          </button>\n\n          <button onClick={handleZoomOut}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              strokeWidth=\"3\"\n            >\n              <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\n            </svg>\n          </button>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default MapChart;\n","import React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport MapChart from \"./MapChart\";\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  return (\n    <div>\n      <MapChart setTooltipContent={setContent} />\n      <ReactTooltip>{content}</ReactTooltip>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}