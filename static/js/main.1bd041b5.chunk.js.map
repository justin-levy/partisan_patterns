{"version":3,"sources":["components/SelectYear.jsx","components/SetRange.jsx","functions/getStateFromId.js","components/MapArea.jsx","_context.js","MapChart.js","App.js","index.js"],"names":["SelectYear","year","setYear","Form","Group","Control","type","value","onChange","e","target","SetRange","low","high","setLow","setHigh","className","min","max","Button","onClick","getStateFromId","fips","findMatch","data","geo","find","s","parseInt","id","MapArea","props","setTooltipContent","position","handleMoveEnd","stateData","colorScale","scaleLinear","domain","range","nextData","projection","zoom","center","coordinates","onMoveEnd","geography","geographies","map","stateName","cur","alabama","iowa","next","fill","onMouseEnter","properties","name","onMouseLeave","style","hover","outline","pressed","rsmKey","MapChart","useState","setData","setNextData","nextYear","setNextYear","useEffect","csv","then","counties","prevData","setPosition","Row","Col","md","outlineColor","backgroundColor","textAlign","pos","App","content","setContent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bd041b5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst SelectYear = ({ year, setYear }) => {\n  return (\n    <Form>\n      <Form.Group>\n        <Form.Control\n          type=\"number\"\n          value={year}\n          onChange={(e) => {\n            setYear(e.target.value);\n          }}\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default SelectYear;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Slider from \"react-rangeslider\";\n\nimport \"react-rangeslider/lib/index.css\";\n\nconst SetRange = ({ low, high, setLow, setHigh }) => {\n  return (\n    <>\n      <div className=\"red\">\n        <Slider min={0} max={200} value={-low} onChange={(e) => setLow(-e)} />\n      </div>\n      <div className=\"blue\">\n        <Slider min={0} max={200} value={high} onChange={(e) => setHigh(e)} />\n      </div>\n      <Button\n        onClick={() => {\n          setHigh(100);\n          setLow(-100);\n        }}\n      >\n        Reset\n      </Button>\n    </>\n  );\n};\n\nexport default SetRange;\n","const getStateFromId = (fips) => {\n  if (fips[0] === \"0\") {\n    // O\n    if (fips[1] === \"1\") {\n      return \"Alabama\";\n    } else if (fips[1] === \"2\") {\n      return \"Alaska\";\n    } else if (fips[1] === \"4\") {\n      return \"Arizona\";\n    } else if (fips[1] === \"5\") {\n      return \"Arkansas\";\n    } else if (fips[1] === \"6\") {\n      return \"California\";\n    } else if (fips[1] === \"8\") {\n      return \"Colorado\";\n    } else if (fips[1] === \"9\") {\n      return \"Connecticut\";\n    }\n  } else if (fips[0] === \"1\") {\n    // 1\n    if (fips[1] === \"0\") {\n      return \"Delaware\";\n    } else if (fips[1] === \"2\") {\n      return \"Florida\";\n    } else if (fips[1] === \"3\") {\n      return \"Georgia\";\n    } else if (fips[1] === \"5\") {\n      return \"Hawaii\";\n    } else if (fips[1] === \"6\") {\n      return \"Idaho\";\n    } else if (fips[1] === \"7\") {\n      return \"Illinois\";\n    } else if (fips[1] === \"8\") {\n      return \"Indiana\";\n    } else if (fips[1] === \"9\") {\n      return \"Iowa\";\n    }\n  } else if (fips[0] === \"2\") {\n    // 2\n    if (fips[1] === \"2\") {\n      return \"Louisiana\";\n    } else if (fips[1] === \"8\") {\n      return \"Mississippi\";\n    }\n  }\n  return `${fips[0]}${fips[1]}`;\n};\n\nexport default getStateFromId;\n","import React from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n} from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\n\nimport { geoUrl } from \"../_context\";\nimport getStateFromId from \"../functions/getStateFromId\";\n\nconst findMatch = (data, geo) => {\n  if (!data) return;\n  return data.find((s) => parseInt(s.fips) === parseInt(geo.id));\n};\n\nconst MapArea = (props) => {\n  const { setTooltipContent, low, high, position, handleMoveEnd, stateData } =\n    props;\n\n  const colorScale = scaleLinear()\n    .domain([low, 0, high])\n    .range([\"red\", \"white\", \"blue\"]);\n\n  const [data, nextData] = stateData;\n\n  return (\n    <ComposableMap data-tip=\"\" projection=\"geoAlbersUsa\">\n      <ZoomableGroup\n        zoom={position.zoom}\n        center={position.coordinates}\n        onMoveEnd={handleMoveEnd}\n      >\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              const stateName = getStateFromId(geo.id);\n\n              const cur =\n                findMatch(data[0].alabama, geo) || findMatch(data[0].iowa, geo);\n              const next =\n                findMatch(nextData[0].alabama, geo) ||\n                findMatch(nextData[0].iowa, geo);\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={colorScale(\n                    cur ? (next ? next.data - cur.data : cur.data) : \"#0000FF\"\n                  )}\n                  onMouseEnter={() => {\n                    setTooltipContent(\"\");\n                    setTooltipContent(\n                      `${geo.properties.name}, ${stateName} : ${\n                        cur && (next ? next.data - cur.data : cur.data)\n                      }`\n                    );\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  style={{\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\",\n                    },\n                    pressed: {\n                      fill: \"#E42\",\n                      outline: \"none\",\n                    },\n                  }}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ZoomableGroup>\n    </ComposableMap>\n  );\n};\n\nexport default MapArea;\n","const geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\n\nexport { geoUrl };\n","import React, { useState, useEffect } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport SelectYear from \"./components/SelectYear\";\nimport SetRange from \"./components/SetRange\";\nimport MapArea from \"./components/MapArea\";\n\nconst MapChart = ({ setTooltipContent }) => {\n  const [data, setData] = useState({});\n  const [nextData, setNextData] = useState({});\n\n  const [year, setYear] = useState(\"1948\");\n  const [nextYear, setNextYear] = useState(\"1952\");\n  const [low, setLow] = useState(-100);\n  const [high, setHigh] = useState(100);\n\n  useEffect(() => {\n    setData([{}]);\n    setNextData([{}]);\n\n    csv(`Alabama/President/${year}.csv`).then((counties) => {\n      setData((prevData) => [{ ...prevData[0], alabama: counties }]);\n    });\n    if (year !== nextYear) {\n      csv(`Alabama/President/${nextYear}.csv`).then((counties) => {\n        setNextData((prevData) => [{ ...prevData[0], alabama: counties }]);\n      });\n    }\n    csv(`Iowa/President/${year}.csv`).then((counties) => {\n      setData((prevData) => [{ ...prevData[0], iowa: counties }]);\n    });\n    if (year !== nextYear) {\n      csv(`Iowa/President/${nextYear}.csv`).then((counties) => {\n        setNextData((prevData) => [{ ...prevData[0], iowa: counties }]);\n      });\n    }\n  }, [year, nextYear]);\n\n  const [position, setPosition] = useState({ coordinates: [0, 0], zoom: 1 });\n\n  function handleZoomIn() {\n    if (position.zoom >= 4) return;\n    setPosition((pos) => ({ ...pos, zoom: pos.zoom * 2 }));\n  }\n\n  function handleZoomOut() {\n    if (position.zoom <= 1) return;\n    setPosition((pos) => ({ ...pos, zoom: pos.zoom / 2 }));\n  }\n\n  function handleMoveEnd(position) {\n    setPosition(position);\n  }\n\n  const stateData = [data, nextData];\n\n  return (\n    <>\n      <Row className=\"layoutRow\">\n        <Col\n          md={10}\n          style={{ outlineColor: \"red\", outline: \"1px\" }}\n          className=\"layoutColumn\"\n        >\n          <MapArea\n            setTooltipContent={setTooltipContent}\n            low={low}\n            high={high}\n            position={position}\n            handleMoveEnd={handleMoveEnd}\n            stateData={stateData}\n          />\n        </Col>\n        <Col\n          md={2}\n          style={{ backgroundColor: \"lightgrey\" }}\n          className=\"layoutColumn\"\n        >\n          <h2 style={{ textAlign: \"center\" }}>{year}</h2>\n\n          <SelectYear year={year} setYear={setYear} />\n          <SelectYear year={nextYear} setYear={setNextYear} />\n          <SetRange low={low} high={high} setLow={setLow} setHigh={setHigh} />\n\n          <button onClick={handleZoomIn}>\n            <i className=\"fas fa-plus\" />\n          </button>\n\n          <button onClick={handleZoomOut}>\n            <i className=\"fas fa-minus\" />\n          </button>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default MapChart;\n","import React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport MapChart from \"./MapChart\";\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  return (\n    <div>\n      <MapChart setTooltipContent={setContent} />\n      <ReactTooltip>{content}</ReactTooltip>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/js/fontawesome\";\nimport \"@fortawesome/fontawesome-free/js/solid\";\n// import \"@fortawesome/fontawesome-free/js/brands\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}